# Generated by Django 3.1.7 on 2021-04-26 05:13

import datetime
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AlumnoBuscado',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alumno_buscado', models.CharField(default='xxxxxxxx', max_length=50)),
                ('NoCubrebocas', models.BooleanField(default=False)),
                ('GelSanitizante', models.BooleanField(default=False)),
                ('NoTapeteSanitizante', models.BooleanField(default=False)),
                ('NoRespetarAforo', models.BooleanField(default=False)),
                ('NoRespetarSanaDistancia', models.BooleanField(default=False)),
                ('NoRealizarEncuestaSemanal', models.BooleanField(default=False)),
                ('NoRespetarEstadoDeRiesgo', models.BooleanField(default=False)),
                ('AsistirDiasSeguidos', models.BooleanField(default=False)),
                ('Comentarios', models.CharField(default='...', max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Encuesta',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('matricula_encuestado', models.CharField(default='xxxxxxxx', max_length=50)),
                ('nombre_reportado', models.CharField(default='xxxxxxxx', max_length=255)),
                ('fecha', models.DateTimeField(blank=True, default=datetime.datetime(2021, 4, 25, 22, 13, 53, 407571))),
                ('positivoCovid', models.BooleanField(default=False)),
                ('fiebre', models.IntegerField(default=0)),
                ('gripa', models.IntegerField(default=0)),
                ('tos', models.IntegerField(default=0)),
                ('problemasRespiratorios', models.IntegerField(default=0)),
                ('dolorCabeza', models.IntegerField(default=0)),
                ('dolorMuscular', models.IntegerField(default=0)),
                ('dolorGarganta', models.IntegerField(default=0)),
                ('diarrea', models.IntegerField(default=0)),
                ('perdidaOlfato', models.IntegerField(default=0)),
                ('perdidaGusto', models.IntegerField(default=0)),
                ('cansancio', models.IntegerField(default=0)),
                ('comentariosdificultad', models.CharField(default='...', max_length=255)),
                ('problemaCardiovascular', models.BooleanField(default=False)),
                ('asma', models.BooleanField(default=False)),
                ('cancer', models.BooleanField(default=False)),
                ('diabetes', models.BooleanField(default=False)),
                ('bronquitis', models.BooleanField(default=False)),
                ('otrosProblemas', models.CharField(default='...', max_length=255)),
                ('personasContacto', models.IntegerField(choices=[(1, '1-5'), (2, '5-10'), (3, '10-20'), (4, '20-50'), (5, 'MÃ¡s de 50')], default=1)),
                ('cine', models.BooleanField(default=False)),
                ('centroComercial', models.BooleanField(default=False)),
                ('restaurante', models.BooleanField(default=False)),
                ('parque', models.BooleanField(default=False)),
                ('hospital', models.BooleanField(default=False)),
                ('otrosLugaresPublicos', models.CharField(default='...', max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Profesores',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('NombreCompleto', models.CharField(max_length=255)),
                ('CedulaProfesional', models.CharField(default='xxxxxxxx', max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Reporte',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('matricula_reportado', models.CharField(default='xxxxxxxx', max_length=50)),
                ('NoCubrebocas', models.BooleanField(default=False)),
                ('GelSanitizante', models.BooleanField(default=False)),
                ('NoTapeteSanitizante', models.BooleanField(default=False)),
                ('NoRespetarAforo', models.BooleanField(default=False)),
                ('NoRespetarSanaDistancia', models.BooleanField(default=False)),
                ('NoRealizarEncuestaSemanal', models.BooleanField(default=False)),
                ('NoRespetarEstadoDeRiesgo', models.BooleanField(default=False)),
                ('AsistirDiasSeguidos', models.BooleanField(default=False)),
                ('Comentarios', models.CharField(default='...', max_length=255)),
                ('hora', models.DateTimeField(blank=True, default=datetime.datetime(2021, 4, 25, 22, 13, 53, 408568))),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('matricula', models.CharField(default='xxxxxxxx', max_length=50)),
                ('ocupacion', models.CharField(choices=[('A', 'Alumno'), ('D', 'Docente'), ('P', 'Personal Administrativo')], default='A', max_length=1)),
                ('riesgo', models.CharField(choices=[('R', 'Rojo'), ('N', 'Naranja'), ('A', 'Amarillo'), ('V', 'Verde')], default='V', max_length=1)),
                ('CorreoMandado', models.CharField(choices=[('S', 'SI'), ('N', 'NO')], default='N', max_length=1)),
                ('puntos', models.IntegerField(default=0)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'ordering': ['riesgo'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Grupos',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Materia', models.CharField(max_length=255)),
                ('Profesor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SRRC19.profesores')),
                ('users', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
